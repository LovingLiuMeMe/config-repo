spring:
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    jedis:
      pool:
        max-active: 10 #最大连接数
        max-wait: -1 #最大阻塞等待时间(负数表示没限制)
        max-idle: 10 #最大空闲
        min-idle: 0 #最小空闲
    timeout: 10000 #链接超时时间
# 自定义路由（测试）
zuul:
  # 排除所有服务的敏感头 
  sensitive-headers: 
  routes:
    myProduct: # 自定义路由名称 http://localhost:8002/myProduct/product/list
      path: /myProduct/** # 要路由的地址
      serviceId: product # 要路由的服务
      # 默认cookie是无法传递的 sensitiveHeaders（敏感头）设置了cookie,所以无法传递cookie
      sensitiveHeaders:
    myOrder: # 自定义路由名称 http://localhost:8002/myProduct/product/list
      path: /myOrder/** # 要路由的地址
      serviceId: order # 要路由的服务
      # 默认cookie是无法传递的 sensitiveHeaders（敏感头）设置了cookie,所以无法传递cookie
      sensitiveHeaders:
    myUser: # 自定义路由名称 http://localhost:8002/myProduct/product/list
      path: /myUser/** # 要路由的地址
      serviceId: user # 要路由的服务
      # 默认cookie是无法传递的 sensitiveHeaders（敏感头）设置了cookie,所以无法传递cookie
      sensitiveHeaders:
    #简洁写法
    product: /simpleMyProduct/** # http://localhost:8002/simpleMyProduct/product/list
  # 禁止某些路由(正则表达式)
  ignored-patterns:
      - /product/product/list
      - /myProduct/product/list
# 路由可视化（实际上就是开发端口） http://localhost:8002/actuator/routes
management:
  endpoints:
    web:
      exposure:
        include: "*"
error:
  path: /error 
